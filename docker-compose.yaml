services:
  dev:
    container_name: chat_docs_dev
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    platform: linux/amd64
    volumes:
      - './:/var/code'
    working_dir: '/var/code'
    command: [ '/bin/sh', '-c', 'tail -f /dev/null' ]
    env_file:
      - .env
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      - embed
      - llm
      - vector-db

  llm:
    container_name: chat_docs_llm
    build:
      context: docker/ollama
    volumes:
      - ./dist/ollama-llm:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODEL=${LLM_MODEL_NAME}
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://0.0.0.0:11434' ]
      start_period: 1m
      interval: 30s
      timeout: 20s
      retries: 3

#  embed:
#    container_name: chat_docs_emb
#    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.2
#    platform: linux/amd64
#    environment:
#      MODEL_ID: BAAI/bge-base-en-v1.5
#      PORT: 3000
#    volumes:
#      - ./dist/tei:/data
#    restart: always
#    healthcheck:
#      test: [ 'CMD', 'curl', '-f', 'http://localhost:3000/health' ]
#      interval: 30s
#      timeout: 20s
#      retries: 3

  embed:
    container_name: chat_docs_emb
    build:
      context: docker/ollama
    volumes:
      - ./dist/ollama-embed:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODEL=${EMBEDDINGS_MODEL_NAME}
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://0.0.0.0:11434' ]
      start_period: 1m
      interval: 30s
      timeout: 20s
      retries: 3

  vector-db:
    container_name: chat_docs_vector_db
    image: milvusdb/milvus:v2.4.4
    command: [ 'milvus', 'run', 'standalone' ]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - ./dist/milvus:/var/lib/milvus
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9091/healthz' ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    restart: always
    depends_on:
      - etcd
      - minio

  etcd:
    container_name: chat_docs_vector_db_etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ./dist/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: [ 'CMD', 'etcdctl', 'endpoint', 'health' ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: chat_docs_vector_db_minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - '9001:9001'
      - '9000:9000'
    volumes:
      - ./dist/minio:/minio_data
    command: minio server /minio_data --console-address ':9001'
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live' ]
      interval: 30s
      timeout: 20s
      retries: 3
